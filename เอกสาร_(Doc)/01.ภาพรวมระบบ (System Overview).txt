# **ภาพรวมระบบ (System Overview)**

ระบบนี้ถูกออกแบบสำหรับการจัดการข้อมูลที่เกี่ยวข้องกับธุรกิจซ่อมสินค้า คลังสินค้า และการขาย ระบบถูกแบ่งออกเป็นแอปย่อยหลัก ๆ พร้อมหน้าที่เฉพาะที่ครอบคลุมความต้องการทางธุรกิจทั้งหมด

---

### **1. แอปพลิเคชันหลักในระบบ**

### **1.1 Customers App**

- **หน้าที่:** จัดการข้อมูลลูกค้า
- **โมเดลที่สำคัญ:**
    - `Customer`: เก็บข้อมูลของลูกค้า เช่น ชื่อ, เบอร์โทรศัพท์, อีเมล, ที่อยู่
- **ฟังก์ชันในระบบ:**
    - เพิ่ม/แก้ไข/ลบข้อมูลลูกค้า
    - ดูรายการลูกค้า
    - ค้นหาข้อมูลลูกค้า
- **การเชื่อมโยง:**
    - เชื่อมโยงกับ `RepairJob` ใน **Repairs App** เพื่อเชื่อมโยงประวัติงานซ่อมกับลูกค้า

---

### **1.2 Inventory App**

- **หน้าที่:** จัดการสินค้า คลังสินค้า และการสั่งซื้อ
- **โมเดลที่สำคัญ:**
    - `Product`: ข้อมูลสินค้า เช่น ชื่อสินค้า, หมวดหมู่, ราคาขาย
    - `Supplier`: ข้อมูลผู้จัดจำหน่ายสินค้า
    - `Stock`: คลังสินค้า พร้อมสถานะคงคลัง (Available, Low, Out of Stock)
    - `Purchase`: ข้อมูลใบสั่งซื้อสินค้า
- **ฟังก์ชันในระบบ:**
    - เพิ่ม/แก้ไข/ลบข้อมูลสินค้า
    - จัดการใบสั่งซื้อสินค้า
    - แสดงสถานะสินค้าคงคลังแบบเรียลไทม์
- **การเชื่อมโยง:**
    - เชื่อมโยงกับ **Repairs App** เพื่อบันทึกการใช้ชิ้นส่วนในงานซ่อม
    - อัปเดตจำนวนสินค้าในคลังเมื่อสถานะใบสั่งซื้อเปลี่ยน

---

### **1.3 Repairs App**

- **หน้าที่:** จัดการข้อมูลงานซ่อมและชิ้นส่วนที่ใช้
- **โมเดลที่สำคัญ:**
    - `RepairJob`: บันทึกข้อมูลงานซ่อม เช่น ชื่อลูกค้า, วันที่ซ่อม, ค่าแรง, สถานะงาน (In Progress, Completed)
    - `UsedPart`: รายละเอียดชิ้นส่วนที่ใช้ในงานซ่อม เช่น จำนวน, ต้นทุน
- **ฟังก์ชันในระบบ:**
    - เพิ่ม/แก้ไข/ลบข้อมูลงานซ่อม
    - เพิ่ม/ลบรายการชิ้นส่วนที่ใช้ในงาน
    - คำนวณต้นทุนรวม (`total_cost`) จากค่าแรง (`labor_cost`) และต้นทุนชิ้นส่วน (`parts_cost`)
- **การเชื่อมโยง:**
    - ใช้ข้อมูล `Customer` จาก **Customers App**
    - ใช้ข้อมูล `Product` จาก **Inventory App** สำหรับบันทึกชิ้นส่วนในงานซ่อม
    - อัปเดตคลังสินค้าเมื่อชิ้นส่วนถูกใช้

---

### **1.4 Sales App**

- **หน้าที่:** จัดการข้อมูลการขายสินค้า
- **โมเดลที่สำคัญ:**
    - `Sale`: บันทึกข้อมูลการขาย เช่น วันที่ขาย, รายการสินค้า
    - `SaleItem`: รายการสินค้าที่ขายในแต่ละใบเสร็จ
- **ฟังก์ชันในระบบ:**
    - บันทึกการขายสินค้า
    - สรุปยอดขาย (อยู่ในแผนการพัฒนาเพิ่มเติม)
- **การเชื่อมโยง:**
    - ใช้ข้อมูลสินค้า (`Product`) จาก **Inventory App**
    - อัปเดตจำนวนสินค้าคงคลังตามการขาย

---

### **2. การเชื่อมโยงระหว่างแอป (Application Relationships)**

1. **Customers App ↔ Repairs App**
    - ลูกค้า (`Customer`) ถูกเชื่อมโยงกับ `RepairJob` เพื่อเก็บประวัติงานซ่อม
2. **Inventory App ↔ Repairs App**
    - ชิ้นส่วน (`UsedPart`) ใช้ข้อมูลจาก `Product` ในคลังสินค้า (`Stock`)
    - คลังสินค้าถูกอัปเดตเมื่อมีการใช้ชิ้นส่วนในงานซ่อม
3. **Inventory App ↔ Sales App**
    - ข้อมูลการขาย (`Sale`, `SaleItem`) ส่งผลต่อจำนวนสินค้าคงคลังใน `Stock`
4. **Inventory App ↔ Purchases**
    - ใบสั่งซื้อ (`Purchase`) ส่งผลให้เพิ่มจำนวนสินค้าในคลังเมื่อสถานะเป็น "Received"

---

### **3. การอัปเดตข้อมูลในระบบ**

### **3.1 การอัปเดตคลังสินค้า (Stock Updates)**

- **เพิ่มจำนวนสินค้าในคลัง:**
    - เมื่อสถานะใบสั่งซื้อ (`Purchase`) เปลี่ยนเป็น "Received"
- **ลดจำนวนสินค้าในคลัง:**
    - เมื่อมีการขายสินค้า (`Sale`)
    - เมื่อชิ้นส่วน (`UsedPart`) ถูกใช้ในงานซ่อม (`RepairJob`)

### **3.2 การคำนวณต้นทุนใน Repairs App**

- `total_cost` ใน `RepairJob` คำนวณจาก:
    - ค่าแรง (`labor_cost`)
    - ต้นทุนชิ้นส่วน (`parts_cost`) ซึ่งรวมจาก `UsedPart`

### **3.3 การจัดการสถานะในระบบ**

- งานซ่อม (`RepairJob`):
    - สถานะ "Completed" จะปรับลดจำนวนชิ้นส่วนในคลัง
    - สถานะ "In Progress" ไม่ส่งผลต่อคลัง
- ใบสั่งซื้อ (`Purchase`):
    - สถานะ "Pending" ไม่อัปเดตจำนวนสินค้าในคลัง
    - สถานะ "Cancelled" จะลดจำนวนสินค้าที่เคยเพิ่มไว้

---

### **4. ฟีเจอร์ที่รองรับผู้ใช้งาน**
    - รองรับการจัดการข้อมูลทุกโมเดล เช่น เพิ่ม/แก้ไข/ลบ
    - มีฟิลด์ค้นหาและตัวกรอง
- **ฟีเจอร์อัตโนมัติ (Automated Features)**:
    - การคำนวณต้นทุนรวมใน `RepairJob`
    - การอัปเดตคลังสินค้าอัตโนมัติ