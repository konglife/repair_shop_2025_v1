# **คำอธิบาย ER Diagram**

ER Diagram นี้แสดงถึงโครงสร้างและความสัมพันธ์ของระบบฐานข้อมูลสำหรับระบบจัดการงานซ่อม คลังสินค้า และการขาย โดยแยกเป็นส่วนสำคัญดังนี้:

---

### **1. Entities (ตารางหลัก)**

- **Customer (ลูกค้า):**
    - บันทึกข้อมูลลูกค้า เช่น ชื่อ, เบอร์โทร, อีเมล, และที่อยู่
    - **Primary Key (PK):** `id`
    - **ความสัมพันธ์:**
        - 1 ลูกค้าสามารถมีได้หลายรายการงานซ่อม (1:N) กับ `RepairJob`
        - 1 ลูกค้าสามารถมีได้หลายใบเสร็จขาย (1:N) กับ `Sale`
- **Product (สินค้า):**
    - ข้อมูลสินค้า เช่น ชื่อ, หมวดหมู่, หน่วย, และราคาขาย
    - **Primary Key (PK):** `id`
    - **ความสัมพันธ์:**
        - เชื่อมโยง 1:1 กับ `Stock` (คลังสินค้า)
        - 1 สินค้าอาจมีได้หลายชิ้นส่วนที่ใช้ในงานซ่อม (1:N) กับ `UsedPart`
        - 1 สินค้าอาจมีได้หลายรายการสินค้าในใบเสร็จขาย (1:N) กับ `SaleItem`
        - 1 สินค้าอาจถูกสั่งซื้อหลายครั้ง (1:N) กับ `Purchase`
- **Supplier (ผู้จัดจำหน่าย):**
    - ข้อมูลผู้จัดจำหน่าย เช่น ชื่อ, ข้อมูลติดต่อ
    - **Primary Key (PK):** `id`
    - **ความสัมพันธ์:**
        - 1 ผู้จัดจำหน่ายสามารถมีใบสั่งซื้อหลายใบ (1:N) กับ `Purchase`
- **Stock (คลังสินค้า):**
    - ข้อมูลสถานะคลังสินค้า เช่น จำนวนขั้นต่ำ, จำนวนปัจจุบัน, และสถานะ
    - **Primary Key (PK):** `id`
    - **Foreign Key (FK):** `product_id` เชื่อมโยงกับ `Product.id`
- **Purchase (ใบสั่งซื้อ):**
    - รายละเอียดใบสั่งซื้อ เช่น จำนวนสินค้า, ราคาต่อหน่วย, วันที่สั่งซื้อ, และสถานะ
    - **Primary Key (PK):** `id`
    - **Foreign Keys (FK):**
        - `product_id` เชื่อมโยงกับ `Product.id`
        - `supplier_id` เชื่อมโยงกับ `Supplier.id`
- **RepairJob (งานซ่อม):**
    - รายละเอียดงานซ่อม เช่น ลูกค้าที่เกี่ยวข้อง, วันที่ซ่อม, ค่าแรง, ค่าใช้จ่ายชิ้นส่วน, และสถานะงาน
    - **Primary Key (PK):** `id`
    - **Foreign Key (FK):** `customer_id` เชื่อมโยงกับ `Customer.id`
- **UsedPart (ชิ้นส่วนที่ใช้):**
    - บันทึกชิ้นส่วนที่ใช้ในงานซ่อม เช่น จำนวน และค่าใช้จ่าย
    - **Primary Key (PK):** `id`
    - **Foreign Keys (FK):**
        - `repair_job_id` เชื่อมโยงกับ `RepairJob.id`
        - `product_id` เชื่อมโยงกับ `Product.id`
- **Sale (การขาย):**
    - ข้อมูลใบเสร็จขาย เช่น วันที่ขาย, ลูกค้าที่ซื้อ, และยอดรวม
    - **Primary Key (PK):** `id`
    - **Foreign Key (FK):** `customer_id` เชื่อมโยงกับ `Customer.id`
- **SaleItem (รายการสินค้าในใบเสร็จ):**
    - รายละเอียดสินค้าในใบเสร็จ เช่น จำนวนสินค้า และราคาต่อหน่วย
    - **Primary Key (PK):** `id`
    - **Foreign Keys (FK):**
        - `sale_id` เชื่อมโยงกับ `Sale.id`
        - `product_id` เชื่อมโยงกับ `Product.id`

---

### **2. Relationships (ความสัมพันธ์ระหว่างตาราง)**

- **Customer ↔ RepairJob (1:N):**
    - ลูกค้าหนึ่งคนสามารถมีงานซ่อมได้หลายงาน
- **Product ↔ Stock (1:1):**
    - สินค้าหนึ่งชิ้นจะมีรายการคลังสินค้าหนึ่งรายการ
- **Product ↔ UsedPart (1:N):**
    - สินค้าหนึ่งชิ้นสามารถถูกใช้ในงานซ่อมหลายงาน
- **RepairJob ↔ UsedPart (1:N):**
    - งานซ่อมหนึ่งรายการสามารถมีชิ้นส่วนหลายรายการ
- **Supplier ↔ Purchase (1:N):**
    - ผู้จัดจำหน่ายหนึ่งรายสามารถมีใบสั่งซื้อหลายใบ
- **Product ↔ Purchase (1:N):**
    - สินค้าหนึ่งชิ้นสามารถถูกสั่งซื้อหลายครั้ง
- **Sale ↔ SaleItem (1:N):**
    - ใบเสร็จหนึ่งใบสามารถมีรายการสินค้าหลายรายการ
- **Product ↔ SaleItem (1:N):**
    - สินค้าหนึ่งชิ้นสามารถปรากฏในใบเสร็จหลายใบ
- **Customer ↔ Sale (1:N):**
    - ลูกค้าหนึ่งรายสามารถมีใบเสร็จได้หลายใบ

---

### **ความสำคัญของโครงสร้าง**

- **การออกแบบฐานข้อมูลที่สัมพันธ์กัน** ช่วยให้มั่นใจได้ว่าระบบสามารถจัดการข้อมูลได้อย่างมีประสิทธิภาพ
- ความสัมพันธ์เหล่านี้รองรับการอัปเดตข้อมูลแบบอัตโนมัติ เช่น:
    - การลดจำนวนสินค้าคงคลังเมื่อมีการขาย (`SaleItem`) หรือใช้ในงานซ่อม (`UsedPart`)
    - การเพิ่มจำนวนสินค้าคงคลังเมื่อมีการรับใบสั่งซื้อ (`Purchase`)